insert into
civicrm_value_hubspot_migra_41 (
    entity_id,
    excluded_from_migration_182, included_in_migration_183, marketing_contact_188,
    included_in_sample_migration_184, migrated_with_no_primary_email_185,
    reason_excluded_186, reason_included_187, reason_marketing_189)
select * from (
    select
        ac.contact_id, null, null, 1, null, null, '', '', concat('''', min(type.name), ''' activity after ', cntl.cutoff)
    from
                civicrm_activity                a
        join    civicrm_activity_contact        ac      on  ac.activity_id = a.id
        join    cbf_migration_control           cntl 
        join    (
                    values
                    row (1, 'Meeting'),
                    row (2, 'Phone Call'),
                    row (3, 'Email'),
                    row (4, 'Outbound SMS'),
                    row (15, 'Follow up'),
                    row (36, 'Survey'),
                    row (40, 'Petition'),
                    row (84, 'Staff assessment'),
                    row (89, 'Course registration'),
                    row (90, 'EvQ goals set')
                ) as    type(id, name)                  on  a.activity_type_id = type.id
    where
                a.activity_date_time    >=      cntl.cutoff /* Activity after cutoff date */
        and     ac.record_type_id       =       3           /* Activity Assignees = 1, Activity Source = 2, Activity Targets = 3 */
        and     a.status_id             =       2           /* Completed */
        and     a.is_test               =       0
        and     a.is_deleted            =       0
        and not exists (                                    /* Exclude folks who register via the Group Licence webhook/agent */
                select * from
                        civicrm_activity_contact    ac1
                where
                                ac1.activity_id     =       a.id
                        and     ac1.contact_id      =       77793   /* 'Group licence' */
                        and     ac1.record_type_id  =       2       /* Activity Assignees = 1, Activity Source = 2, Activity Targets = 3 */
        )
    group by
        ac.contact_id
) as    newrow(id, excluded, included, marketing, sample, no_primary, reason_excluded, reason_included, reason_marketing)
on duplicate key
update
    marketing_contact_188 = marketing,
    reason_marketing_189 = if(reason_marketing_189 > '', left(concat(reason_marketing, '; ', reason_marketing_189), 1024), reason_marketing)
    /* Note that if(null-expression, A, B) evaluates to B */
